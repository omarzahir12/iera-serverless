service: iera-app-serverless
frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs18.x
  region: ca-central-1
  stage: ${opt:stage, 'dev'}
  memorySize: 128
  environment:
    MONGO_URI: mongodb://ieraMongo:rbDu6inMs99ARg@127.0.0.1:27018
  


functions:
  #open
  login:
    handler: src/users/login.handler
    events:
      - httpApi:
          path: /login
          method: post
  #open
  register:
    handler: src/users/create.handler
    events:
      - httpApi:
          path: /users
          method: post
  #secured, owner, lead, admin TODO
  getUser:
    handler: src/users/getUser.handler
    events:
      - httpApi:
          path: /users/{user_id}
          method: get
  #secured, owner, lead, admin 
  updateUser:
    handler: src/users/updateUser.handler
    events:
      - httpApi:
          path: /users/{user_id}
          method: put
  #secured, owner
  createRequest:
    handler: src/requests/createRequest.handler
    events:
      - httpApi:
          path: /requests
          method: post
  
  #secured, admin 
  pendingRequests:
    handler: src/requests/getRequests.handler
    events:
      - httpApi:
          path: /requests
          method: get
  
  #secured, admin
  approveRequest:
    handler: src/requests/approveRequest.handler
    events:
      - httpApi:
          path: /requests/{request_id}
          method: put
  

  #secured, owner, lead, admin 
  getTeam:
    handler: src/teams/getTeam.handler
    events:
      - httpApi:
          path: /teams/{team_id}
          method: get
  #secured, owner, lead, admin 
  getTeams:
    handler: src/teams/getTeams.handler
    events:
      - httpApi:
          path: /teams
          method: get
  #secured, admin 
  createTeam:
    handler: src/teams/createTeam.handler
    events:
      - httpApi:
          path: /teams
          method: post
  #secured, admin 
  updateTeam:
    handler: src/teams/updateTeam.handler
    events:
      - httpApi:
          path: /teams/{team_id}
          method: put
  #secured, owner, lead, admin 
  getEvent:
    handler: src/events/getEvent.handler
    events:
      - httpApi:
          path: /teams/{team_id}/events/{event_id}
          method: get
  getEvents:
    handler: src/events/getEvents.handler
    events:
      - httpApi:
          path: /teams/{team_id}/events
          method: get
  #secured, lead, admin 
  createEvent:
    handler: src/events/createEvent.handler
    events:
      - httpApi:
          path: /teams/{team_id}/events
          method: post
  #secured, lead, admin 
  updateEvent:
    handler: src/events/updateEvent.handler
    events:
      - httpApi:
          path: /teams/{team_id}/events/{event_id}
          method: put
plugins:
  - serverless-offline